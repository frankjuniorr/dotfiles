---
- name: "System | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yaml"
  register: system_distribution_config

- name: "System | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yaml"
  when: system_distribution_config.stat.exists

# Install Oh-My-ZSH
##############################################################################
- name: "Oh-My-ZSH | Install"
  ansible.builtin.shell: "sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\""
  args:
    creates: "{{ ansible_user_dir }}/.oh-my-zsh"

- name: "Oh-My-ZSH | Install Plugins"
  git:
    repo: "https://github.com/zsh-users/{{ item }}.git"
    dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/plugins/{{ item }}"
    version: master
  loop:
    - zsh-syntax-highlighting
    - zsh-autosuggestions

# Install ZSH
##############################################################################
- name: "ZSH | Ensure {{ ansible_user_dir }}/config/dotfiles directory exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/dotfiles"
    state: directory
    mode: '0755'

# Linking Config file
- name: "ZSH | Ensure clean .zshrc file"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.zshrc"
    state: absent

- name: "ZSH | Create symbolic link for .zshrc"
  become: yes
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - { src: "{{ role_path }}/files/.zshrc", dest: "{{ ansible_user_dir }}/.zshrc" }
    - { src: "{{ role_path }}/files/.gitconfig", dest: "{{ ansible_user_dir }}/.gitconfig" }
    - { src: "{{ role_path }}/files/alias.sh", dest: "{{ ansible_user_dir }}/.config/dotfiles/alias.sh" }
    - { src: "{{ role_path }}/files/functions.sh", dest: "{{ ansible_user_dir }}/.config/dotfiles/functions.sh" }

- name: "ZSH | Ensure ~/.bin directory structure exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.bin"
    mode: "0755"
    state: directory

- name: "ZSH | Create symbolic links for scripts"
  ansible.builtin.shell:
    cmd: "stow -t {{ ansible_user_dir }}/.bin ."
    chdir: "{{ role_path }}/files/scripts"

- name: "ZSH | Change to zsh"
  become: yes
  ansible.builtin.shell: "chsh -s $(which zsh) {{ host_user }}"